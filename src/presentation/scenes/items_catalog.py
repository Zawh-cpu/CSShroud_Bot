import aiogram

from aiogram import filters, types
from aiogram.fsm import scene, context
from dependency_injector.wiring import inject, Provide

from src.core import UserSession
from src.infrastructure.services import Translator
from src.presentation import tools
from src.container import Container

class MainScene(scene.Scene):

    @scene.on.message.enter(Translator)
    @scene.on.callback_query.enter(Translator)
    @inject
    @tools.request_handler(auth=True, bypass_if_command=True)
    async def default_handler(self, query: types.CallbackQuery or types.Message, translator: Translator = Provide[Container.translator], user: UserSession=None):
        text = translator.translate("items_catalog-text")
        keyboard = [
            [
                types.InlineKeyboardButton(text="üê≥  –ú–µ–Ω—é", callback_data="None"),
                types.InlineKeyboardButton(text="üìù  –ü–æ–∏—Å–∫", callback_data="None"),
            ],
            [
                types.InlineKeyboardButton(text="üìº  –§–∏–ª—å—Ç—Ä", callback_data="None"),
                types.InlineKeyboardButton(text="üìº  –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä", callback_data="None"),
            ],
            [
                types.InlineKeyboardButton(text="üó∫  –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ç–æ—á–∫–∞—Ö", callback_data="None"),
            ]
        ]

        return {"text": text, "reply_markup": types.InlineKeyboardMarkup(inline_keyboard=keyboard)}
